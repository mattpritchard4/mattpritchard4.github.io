{"version":3,"sources":["webpack:///./node_modules/date-fns/parse/index.js","webpack:///./node_modules/bs-platform/lib/js/array.js","webpack:///./node_modules/bs-platform/lib/js/caml_js_exceptions.js","webpack:///./node_modules/date-fns/start_of_iso_week/index.js","webpack:///./node_modules/date-fns/is_date/index.js","webpack:///./node_modules/date-fns/get_iso_year/index.js","webpack:///./node_modules/date-fns/format/index.js","webpack:///./node_modules/date-fns/get_day_of_year/index.js","webpack:///./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/start_of_year/index.js","webpack:///./node_modules/date-fns/difference_in_calendar_days/index.js","webpack:///./node_modules/date-fns/start_of_day/index.js","webpack:///./node_modules/date-fns/get_iso_week/index.js","webpack:///./node_modules/date-fns/start_of_week/index.js","webpack:///./node_modules/date-fns/start_of_iso_year/index.js","webpack:///./node_modules/date-fns/is_valid/index.js","webpack:///./node_modules/date-fns/locale/en/index.js","webpack:///./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","webpack:///./node_modules/date-fns/locale/en/build_format_locale/index.js","webpack:///./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js"],"names":["getTimezoneOffsetInMilliseconds","__webpack_require__","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","module","exports","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","offsetDiff","Curry","Caml_array","Caml_exceptions","Caml_js_exceptions","Caml_builtin_exceptions","make_matrix","sx","sy","init","res","caml_make_vect","x","x_finish","copy","a","l","caml_array_sub","blit","a1","ofs1","a2","ofs2","len","invalid_argument","caml_array_blit","Bottom","create","stable_sort","cmp","merge","src1ofs","src1len","src2","src2ofs","src2len","dst","dstofs","src1r","src2r","_i1","_s1","caml_array_get","_i2","_s2","_d","d","s2","i2","s1","i1","_2","caml_array_set","i1$1","i2$1","isortto","srcofs","i","i_finish","e","j","sortto","l1","l2","t","create_matrix","concat","caml_array_concat","fast_sort","f","_1","append","sub","ofs","fill","v","to_list","_i","_res","of_list","_accu","_param","accu","list_length","param","iter","map","r","iteri","mapi","fold_left","fold_right","sort","maxson","i31","trickle","l$1","e$1","i$1","raw_exn","exn","internalToOCamlException","bubble","trickleup","father","assert_failure","Caml_option","$$Error","caml_is_extension","caml_as_js_exn","some","startOfWeek","dirtyDate","weekStartsOn","parse","startOfISOWeek","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getDayOfYear","getISOWeek","getISOYear","isValid","enLocale","formatters","M","getMonth","MM","addLeadingZeros","Q","Math","ceil","D","DD","DDD","DDDD","getDay","E","W","WW","YY","substr","YYYY","GG","String","GGGG","H","getHours","HH","h","hh","m","getMinutes","mm","s","getSeconds","ss","S","floor","getMilliseconds","SS","SSS","Z","formatTimezone","getTimezoneOffset","ZZ","X","delimeter","sign","absOffset","abs","number","targetLength","output","toString","dirtyFormatStr","formatStr","locale","localeFormatters","format","formattingTokensRegExp","formatter","input","match","Function","buildFormatFn","formatFn","startOfYear","differenceInCalendarDays","baseTimezoneOffset","setSeconds","cleanDate","startOfDay","MILLISECONDS_IN_DAY","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","startOfISOYear","MILLISECONDS_IN_WEEK","fourthOfJanuary","isNaN","TypeError","call","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","count","options","result","addSuffix","comparison","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","MMM","MMMM","dd","ddd","dddd","A","aa","forEach","formatterToken","rem100","ordinal","commonFormatterKeys","formatterKeys","key","hasOwnProperty","push","formattingTokens","reverse","RegExp","join"],"mappings":"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","file":"10-b39c2ca16293b4fbb51a.js","sourcesContent":["var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js')\nvar isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","'use strict';\n\nvar Curry = require(\"./curry.js\");\nvar Caml_array = require(\"./caml_array.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\nvar Caml_js_exceptions = require(\"./caml_js_exceptions.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction init(l, f) {\n  if (l === 0) {\n    return /* array */[];\n  } else if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  } else {\n    var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = Curry._1(f, i);\n    }\n    return res;\n  }\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, /* array */[]);\n  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  } else {\n    return Caml_array.caml_array_sub(a, ofs, len);\n  }\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  } else {\n    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){\n      a[i] = v;\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  } else {\n    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    } else {\n      _res = /* :: */[\n        a[i],\n        res\n      ];\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction of_list(l) {\n  if (l) {\n    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n    var _i = 1;\n    var _param = l[1];\n    while(true) {\n      var param = _param;\n      var i = _i;\n      if (param) {\n        a[i] = param[0];\n        _param = param[1];\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return a;\n      }\n    };\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    } else if (i31 < l) {\n      return i31;\n    } else {\n      throw [\n            Bottom,\n            i\n          ];\n    }\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      var e$1 = e;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {\n          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n          _i = j;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, i$1, e$1);\n        }\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return Caml_array.caml_array_set(a, exn[1], e);\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return exn[1];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"array.ml\",\n                173,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {\n        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n        if (father > 0) {\n          _i = father;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, 0, e);\n        }\n      } else {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l > 1) {\n    var e$1 = Caml_array.caml_array_get(a, 1);\n    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n    return Caml_array.caml_array_set(a, 0, e$1);\n  } else {\n    return 0;\n  }\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 < src1r) {\n          _d = d + 1 | 0;\n          _s1 = Caml_array.caml_array_get(a, i1$1);\n          _i1 = i1$1;\n          continue ;\n        } else {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n      } else {\n        Caml_array.caml_array_set(dst, d, s2);\n        var i2$1 = i2 + 1 | 0;\n        if (i2$1 < src2r) {\n          _d = d + 1 | 0;\n          _s2 = Caml_array.caml_array_get(src2, i2$1);\n          _i2 = i2$1;\n          continue ;\n        } else {\n          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n        }\n      }\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    return /* () */0;\n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    } else {\n      var l1 = len / 2 | 0;\n      var l2 = len - l1 | 0;\n      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n      sortto(srcofs, a, srcofs + l2 | 0, l1);\n      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n    }\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n    sortto(l1, t, 0, l2);\n    sortto(0, a, l2, l1);\n    return merge(l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.map = map;\nexports.iteri = iteri;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\n/* No side effect */\n","'use strict';\n\nvar Caml_option = require(\"./caml_option.js\");\nvar Caml_exceptions = require(\"./caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n  \n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.caml_as_js_exn = caml_as_js_exn;\n/* No side effect */\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n"],"sourceRoot":""}